name: Sync Vald version
on:
  workflow_call:
    inputs:
      vald_checkout_src_tag_ref:
        description: "Switch tag or restore working tree files to build vald"
        type: string
        required: true
      client_checkout_target_ref:
        description: "Switch branches or restore working tree files to build vald"
        type: string
        default: main
        required: false
    secrets:
      CI_USER:
        required: true
      CI_TOKEN:
        required: true
      GPG_PRIVATE_KEY:
        required: true

env:
  IMAGES: "vdaas/vald-agent-ngt vdaas/vald-discoverer-k8s vdaas/vald-lb-gateway vdaas/vald-manager-index"
  IMAGE_TAG: ${{ inputs.vald_checkout_src_tag_ref }} # v1.7.12

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_BRANCH_NAME: ${{ steps.create_release_branch.outputs.RELEASE_BRANCH_NAME }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.client_checkout_target_ref }}
          token: ${{ secrets.CI_TOKEN }}
      - name: Set Git config
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}
      - name: Search docker image tag
        id: search_docker_image_tag
        run: |
          for image in ${IMAGES}; do
            echo "Search image: ${image}:${IMAGE_TAG}"
            if ! curl -s "https://registry.hub.docker.com/v2/repositories/${image}/tags/${IMAGE_TAG}" | jq '.name' | grep -v "null" > /dev/null ; then
              echo "Image ${image}:${IMAGE_TAG} not Found. Existing..."
              exit 1
            else
              echo "Image ${image}:${IMAGE_TAG} Found"
            fi
          done

          echo "All images found."
      - name: Create branch
        id: create_release_branch
        run: |
          BRANCH_EXIST=$(git fetch origin "${RELEASE_BRANCH_NAME}" && echo true || echo false)
          if [ "${BRANCH_EXIST}" != "true" ]; then
            git checkout -b ${RELEASE_BRANCH_NAME} && git push origin ${RELEASE_BRANCH_NAME}
          fi

          echo "RELEASE_BRANCH_NAME=${RELEASE_BRANCH_NAME}" >> $GITHUB_OUTPUT
          echo "RELEASE_BRANCH_NAME=${RELEASE_BRANCH_NAME}"
        env:
          RELEASE_BRANCH_NAME: release/${{ inputs.vald_checkout_src_tag_ref }}

  sync:
    needs:
      - prepare
    uses: ./.github/workflows/_sync.yaml
    with:
      vald_checkout_src_ref: ${{ inputs.vald_checkout_src_tag_ref }}
      client_checkout_target_ref: ${{ needs.prepare.outputs.RELEASE_BRANCH_NAME }}
    secrets: inherit
