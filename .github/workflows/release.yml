#
# Copyright (C) 2019-2023 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: Run semver
on:
  push:
    branches:
      - "release/v*.*"
      - "!release/v*.*.*"

jobs:
  dump-contexts-to-log:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/dump-context

  semver-auto:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set context
        id: set_context
        run: |
          RELEASE_BRANCH_NAME=`echo '${{ github.ref }}' | sed -e 's:^refs/heads/release/::'`
          BRANCH_LATEST_TAG=`git tag | grep ${RELEASE_BRANCH_NAME} | tail -n 1`
          RELEASE_KIND=`echo "${{ github.event.head_commit.message }}" | sed -n -E 's:^\[(major|minor|patch)\].*:\1:p'`

          echo "RELEASE_BRANCH_NAME=${RELEASE_BRANCH_NAME}" >> $GITHUB_OUTPUT # e.g) vx.x
          echo "BRANCH_LATEST_TAG=${BRANCH_LATEST_TAG}"     >> $GITHUB_OUTPUT # e.g) vx.x.x or empty
          echo "RELEASE_KIND=${RELEASE_KIND}"               >> $GITHUB_OUTPUT # e.g) major or minor or patch or empty

          echo "${RELEASE_BRANCH_NAME}"
          echo "${BRANCH_LATEST_TAG}"
          echo "${RELEASE_KIND}"

      - name: Upgrade semver
        if: ${{ steps.set_context.outputs.RELEASE_KIND != '' }}
        run: |
          echo "aaaa"

  release:
    needs: [semver-auto]
    if: ${{ needs.semver-auto.outputs.DO_RELEASE == 'true' }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/vdaas/vald/vald-ci-container:nightly
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set Git config
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}
