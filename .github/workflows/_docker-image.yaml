name: "Build docker image"
on:
  workflow_call:
    inputs:
      target:
        type: string
        description: 'Build target. e.g. `agent-ngt`'
        required: true
      platforms:
        type: string
        description: "if it is specified, specified platforms will be used."
        required: false
        default: ""

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref != 'refs/heads/main' && github.ref || github.sha }}-${{ github.event_name }}-${{ inputs.target }}
  cancel-in-progress: true

jobs:
  dump-contexts-to-log:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/dump-context

  build:
    runs-on: ubuntu-latest
    #if: ${{ (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false) || (github.event.pull_request.head.repo.fork == true && github.event_name == 'pull_request_target' && contains(github.event.pull_request.labels.*.name, 'ci/approved')) || (github.event_name == 'push' && github.ref == 'refs/heads/main') || startsWith( github.ref, 'refs/tags/') }}
    steps:
      - name: Get ref
        id: ref
        run: |
          if [ ${{ github.event.pull_request.head.sha }} != "" ]; then
            echo ref=${{ github.event.pull_request.head.sha }} >> $GITHUB_OUTPUT
          else
            echo ref=${{ github.sha }} >> $GITHUB_OUTPUT
          fi

      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.ref.outputs.ref }}

      - name: Set Git config
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: "--debug"

      # - name: Login to DockerHub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USER }}
      #     password: ${{ secrets.DOCKERHUB_PASS }}
      #
      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: ${{ secrets.PACKAGE_USER }}
      #     password: ${{ secrets.PACKAGE_TOKEN }}
      #
      # - name: Build and Publish
      #   id: build_and_publish
      #   uses: ./.github/actions/docker-build
      #   with:
      #     target: ${{ inputs.target }}
      #     platforms: ${{ inputs.platforms }}
      #     builder: ${{ steps.buildx.outputs.name }}

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2

      - name: Scan the Docker image
        uses: ./.github/actions/scan-docker-image
        with:
          image_ref: "vdaas/vald-agent-ngt:pr-2141"

  slack:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main' || startsWith( github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/notify-slack
        with:
          author_name: ${{ inputs.target }} image build
          slack_notify_webhook_url: ${{ secrets.SLACK_NOTIFY_WEBHOOK_URL }}
